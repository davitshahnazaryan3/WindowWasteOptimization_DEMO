#: import SlideTransition kivy.uix.screenmanager.SlideTransition
#: import C kivy.utils.get_color_from_hex

<InventoryButton@MDRoundFlatButton>:
    font_name: "Roboto/Roboto-Regular.ttf"
    text_color: C("#000000")
    md_bg_color: C("#add8e6")

<InventoryLabel@MDLabel>:
    font_name: "Roboto"
    font_size: 20
    bold: False
    markup: True

<InventoryLabelButton@LabelButton>:
    color: C('#000000')
    font_name: "Roboto"
    font_size: 20
    bold: False
    markup: True

<InventoryTextField@MDTextField>:
    color_mode: "custom"
    line_color_focus: 0, 0, 0, 1
    line_color_normal: 0, 0, 0, 1
    font_name: "Roboto/Roboto-Medium.ttf"


<WindowQuantity>:
    padding: 30, 0, 30, 0
    spacing: 18

    InventoryLabel:
        size_hint: 0.6, 0.2
        pos_hint: {"x": 0.05, "y": .5}
        text: "Quantity"
        color: C('#000000')
        font_size: 18

    InventoryLabel:
        size_hint: 0.6, 0.2
        pos_hint: {"x": 0.25, "y": .5}
        text: root.quantity
        color: C('#000000')
        font_size: 18

    InventoryButton:
        text: "Update"
        pos_hint: {"center_x": .7, "center_y": 0.55}
        size_hint: .25, .3
        on_release:
            root.update_quantity()


<WindowInfoScreen>:
    padding: 30, 0, 30, 0
    spacing: 18

    BoxLayout:
        orientation: 'vertical'

        GridLayout:
            rows: 1
            id: quantity_layout
            size_hint: (1, .1)

        ScrollView:
            size_hint: (1, .4)
            bar_width: 5
            bar_color: C("#363030")
            bar_inactive_color: C("#756060")
            effect_cls: 'ScrollEffect'
            scroll_type: ['bars', 'content']

            GridLayout:
                id: grid
                orientation: "tb-lr"
                size_hint_y: None
                height: self.minimum_height
                row_default_height: 60
                cols: 1

        GridLayout:
            id: window_image_grid
            size_hint: (1, .4)
            orientation: "tb-lr"
            size_hint_y: None
            height: self.minimum_height
            row_default_height: 180
            cols: 1

        FloatLayout:
            size_hint: (1, .1)

            InventoryButton:
                text: "Back"
                pos_hint: {"center_x": .5, "y": 0.25}
                size_hint: .35, .4
                on_release:
                    root.parent.transition = SlideTransition(direction='right')
                    root.parent.current = "inventory_screen"
                    app.root.ids.firebase_login_screen.ids.inventory_screen.show_windows()
                    grid.clear_widgets()
                    window_image_grid.clear_widgets()
                    quantity_layout.clear_widgets()


<WindowInfo>:
    id: window_info
    name: "window_info"
    padding: 30, 0, 30, 0
    spacing: 18

    BoxLayout:
        orientation: 'vertical'

        GridLayout:
            rows: 1
            size_hint: (1, 0.1)
            padding: 15

            InventoryLabel:
                color: C('#000000')
                pos_hint: {"x": .2, "center_y": 0.5}
                text: root.quantity_text

            InventoryLabelButton:
                text: "[u]Show[/u]"
                on_release:
                    root.change_screen("window_info_screen", direction="left", mode="pop")
                    app.root.ids.firebase_login_screen.ids.inventory_screen.ids.scroll_view.clear_widgets()

            InventoryLabelButton:
                text: "[u]Del[/u]"
                disabled: root.disable_button
                on_release:
                    root.show_alert_dialog()

<WindowRow>:
    padding: 30, 0, 30, 0
    spacing: 18

    InventoryLabel:
        color: C('#000000')
        pos_hint: {"x": .05, "center_y": 0.5}
        text: root.label
        size_hint: (0.13, None)

    InventoryLabel:
        color: C('#000000')
        pos_hint: {"x": .35, "center_y": 0.5}
        text: root.edge
        size_hint: (0.13, None)

    InventoryLabel:
        color: C('#000000')
        pos_hint: {"x": .5, "center_y": 0.5}
        text: root.profile
        size_hint: (0.13, None)

    InventoryButton:
        text: "Update"
        pos_hint: {"center_x": .8, "center_y": 0.5}
        size_hint: .15, .5
        on_release:
            root.update_info()


<Content>
    orientation: "vertical"
    spacing: "12dp"
    size_hint_y: None
    height: "32dp"

    MDTextField:
        id: t1
        hint_text: "Length"
        input_filter: "float"


<InventoryScreen>:
    id: inventory_screen
    name: "inventory_screen"
    background: ""
    canvas.before:
        Rectangle:
            size: self.size
            pos: self.pos
            source: root.background

    BoxLayout:
        orientation: "vertical"

        FloatLayout:
            size_hint: (1, 0.1)

            # Go back to existing analysis results
            MDToolbar:
                md_bg_color: 0, 0, 0, 0
                elevation: 0
                pos_hint: {"top": 1}
                right_action_items: [['chevron-right', lambda x: root.go_back()]]
                icon_color: 0, 1, 0, 1
                specific_text_color: 255, 255, 255, 1

            # Go back to Input screen
            InventoryButton:
                text: "Create Windows"
                pos_hint: {"center_x": .5, "center_y": 0.6}
                size_hint: .4, .5
                on_release:
                    root.parent.transition = SlideTransition(direction='down')
                    root.parent.current = "input_screen"
                    scroll_view.clear_widgets()

        ScrollView:
            id: scroll_view
            size_hint: (1, .8)
            bar_width: 5
            bar_color: C("#363030")
            bar_inactive_color: C("#756060")
            effect_cls: 'ScrollEffect'
            scroll_type: ['bars', 'content']

        FloatLayout:
            size_hint: (1, .1)
            # Run Analysis
            InventoryButton:
                text: "Run Analysis"
                pos_hint: {"center_x": .25, "y": 0.25}
                size_hint: .45, .5
                on_release:
                    # Run analysis
                    root.run_analysis()
                    root.parent.transition = SlideTransition(direction='left')
                    root.parent.current = "analysis_screen"


            # Log out of profile (back to Welcome window)
            InventoryButton:
                text: "End Session"
                pos_hint: {"center_x": .75, "y": 0.25}
                size_hint: .45, .5
                on_release:
                    root.parent.transition = SlideTransition(direction='right')
                    root.parent.current = "session_screen"
                    scroll_view.clear_widgets()
                    root.parent.parent.ids.input_screen.clear_global_variables()
